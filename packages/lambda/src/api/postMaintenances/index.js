// Code generated by generate-maintenance-handler. DO NOT EDIT.
/* eslint-disable */
import EventsHandler from 'api/eventsHandler'
import { messageType } from 'aws/sns'
import { Maintenance, MaintenanceUpdate } from 'model/maintenances'
import { Component } from 'model/components'
import MaintenancesStore from 'db/maintenances'
import MaintenanceUpdatesStore from 'db/maintenanceUpdates'

export async function handle (event, context, callback) {
  try {
    const maintenance = new Maintenance(event)
    const maintenanceUpdate = new MaintenanceUpdate({
      maintenanceStatus: event.status,
      ...event
    })
    const components = event.components === undefined ? [] : event.components.map(comp => new Component(comp))
    const handler = new EventsHandler(new MaintenancesStore(), new MaintenanceUpdatesStore())
    const msgType = messageType.maintenanceCreated
    const [respMaintenance, respMaintenanceUpdate] = await handler.createEvent(maintenance, maintenanceUpdate, msgType, components)

    const resp = {
      ...respMaintenance.objectify(),
      maintenanceUpdates: [respMaintenanceUpdate.objectify()]
    }
    if (event.components !== undefined) {
      resp.components = event.components
    }
    callback(null, resp)
  } catch (error) {
    console.log(error.message)
    console.log(error.stack)
    switch (error.name) {
      case 'ValidationError':
        callback('Error: ' + error.message)
        break
      default:
        callback('Error: failed to create a new maintenance')
    }
  }
}
